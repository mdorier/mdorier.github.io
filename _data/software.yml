- name: Mochi
  title: A collection of libraries for HPC data services
  description: Mochi is a set of libraries that my team and I are developing at Argonne National Laboratory. This project aims at providing libraries to build efficient HPC data services. Such libraries include threading, RPC, RDMA, key/value storage, document storage, blob storage, etc. Some of my most important contributions to these libraries, is thallium, a modern C++ library enabling threading, RPC, and RDMA, on top of the Argobots threading library and the Mercury networking library. The Mochi libraries are currently used by a growing number of users, including people from LANL, LLNL, LBNL, JGU Mainz, Intel, IIT, The HDF Group, BNL, Rutgers University, and FermiLab.
  website: https://www.mcs.anl.gov/research/projects/mochi/
- name: HEPnOS
  title: A storage system for high-energy physics
  description: https://hepnos.readthedocs.io/en/latest/
  description: HEPnOS is an object store that I designed and built using the Mochi libraries in the context of a collaboration with FermiLab. The goal of HEPnOS is to provide a simple interface to HEP event-processing workflows in modern C++, backed with an efficient object store, as a potential replacement to the traditional file-based storage approach based on the ROOT file format. HEPnOS is currently actively developed and under evaluation with our partners at FermiLab.
- name: Damaris
  title: A middleware for HPC I/O and in situ analysis
  description: Damaris is a data-management middleware for high-performance computing simulations. It enables to dedicate some of the cores in each node, or entire nodes, to run data management services, including asynchronous data transformation and storage, and in situ visualization and analysis. I developed Damaris during my Master and PhD (2010 to 2014) and published a number of papers about it. Following my graduation, the KerData team of INRIA Rennes hired an engineer to continue developing and supporting it. To this day, Damaris is still actively maintained by the KerData team.
  website: http://damaris.gforge.inria.fr
